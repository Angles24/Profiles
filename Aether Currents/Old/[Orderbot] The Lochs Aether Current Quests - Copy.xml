<?xml version="1.0" encoding="UTF-8"?>
<!--
Profile:  [Orderbot] The Lochs Aether Current Quests
Authors:  Sodimm, TuckMeIntoBread
-->
<Profile>
  <Name>[Orderbot] The Lochs Aether Current Quests</Name>
  <Order>
    <!-- It's a Zu Out There -->
    <If Condition="IsQuestCompleted(68084) and not HasQuest(68413) and not IsQuestCompleted(68413)">
      <GetTo ZoneId="621" XYZ="-506.7125, 8.7, -40.07228"/>
      <If Condition="IsQuestAcceptQualified(68413)">
        <PickupQuest QuestId="68413" NpcId="1022992" XYZ="-506.7125, 8.7, -40.07228"/>
      </If>
    </If>
    <If Condition="HasQuest(68413) and not IsQuestCompleted(68413) and GetQuestStep(68413) == 1">
      <GetTo ZoneId="621" XYZ="-258.1663, 98.84189, -488.754"/>
      <WaitWhile Condition="HasQuest(68413) and not IsQuestCompleted(68413) and not GetQuestStep(68413) == 255"/>
    </If>
    <If Condition="HasQuest(68413) and not IsQuestCompleted(68413) and GetQuestStep(68413) == 255">
      <GetTo ZoneId="621" XYZ="-506.307, 8.7, -40.12613"/>
      <TurnIn QuestId="68413" NpcId="1022992" XYZ="-506.307, 8.7, -40.12613"/>
    </If>
    <!-- A Rite to Rest -->
    <If Condition="IsQuestCompleted(68084) and not HasQuest(68416) and not IsQuestCompleted(68416)">
      <GetTo ZoneId="621" XYZ="-524.7865, 8.685927, -19.41368"/>
      <If Condition="IsQuestAcceptQualified(68416)">
        <PickupQuest QuestId="68416" NpcId="1022990" XYZ="-524.7865, 8.685927, -19.41368"/>
      </If>
    </If>
    <If Condition="HasQuest(68416) and not IsQuestCompleted(68416) and GetQuestStep(68416) == 1">
      <GetTo ZoneId="621" XYZ="-473.1273, 87.08347, -722.8254"/>
      <Grind GrindRef="68416" PostCombatDelay="3.0" While="HasQuest(68416) and not IsQuestCompleted(68416) and GetQuestStep(68416) == 1"/>
    </If>
    <If Condition="HasQuest(68416) and not IsQuestCompleted(68416) and GetQuestStep(68416) == 255">
      <GetTo ZoneId="621" XYZ="-524.5329, 8.68931, -19.4433"/>
      <TurnIn QuestId="68416" NpcId="1022990" XYZ="-524.5329, 8.68931, -19.4433"/>
    </If>
    <!-- If I Were a Fish -->
    <If Condition="IsQuestCompleted(68087) and not HasQuest(68417) and not IsQuestCompleted(68417)">
      <GetTo ZoneId="621" XYZ="-662.0169, 49.99979, -48.66205"/>
      <If Condition="IsQuestAcceptQualified(68417)">
        <PickupQuest QuestId="68417" NpcId="1022987" XYZ="-662.0169, 49.99979, -48.66205"/>
      </If>
    </If>
    <If Condition="HasQuest(68417) and not IsQuestCompleted(68417) and GetQuestStep(68417) == 1">
      <GetTo ZoneId="621" XYZ="-82.7164, 1.120263, -297.6326"/>
      <TalkTo NpcId="1023174" XYZ="-82.7164, 1.120263, -297.6326" QuestId="68417" StepId="1"/>
    </If>
    <If Condition="HasQuest(68417) and not IsQuestCompleted(68417) and GetQuestStep(68417) == 2">
      <GetTo ZoneId="621" XYZ="-131.4688, -0.6, -179.2324"/>
	  <RunCode Name="68417"/>
    </If>
    <If Condition="HasQuest(68417) and not IsQuestCompleted(68417) and GetQuestStep(68417) == 3">
      <GetTo ZoneId="621" XYZ="-82.78043, 1.129258, -297.2216"/>
      <HandOver ItemId="2002313" NpcId="1023174" XYZ="-82.78043, 1.129258, -297.2216" QuestId="68417" StepId="3"/>
    </If>
    <If Condition="HasQuest(68417) and not IsQuestCompleted(68417) and GetQuestStep(68417) == 255">
      <GetTo ZoneId="621" XYZ="-661.8531, 49.9998, -48.9227"/>
      <TurnIn QuestId="68417" NpcId="1022987" XYZ="-661.8531, 49.9998, -48.9227"/>
    </If>
    <!-- Are They Ill Tempered -->
    <If Condition="IsQuestCompleted(68087) and not HasQuest(68419) and not IsQuestCompleted(68419)">
      <GetTo ZoneId="621" XYZ="-539.7319, 7.611982, 52.4417"/>
      <If Condition="IsQuestAcceptQualified(68419)">
        <PickupQuest QuestId="68419" NpcId="1022991" XYZ="-539.7319, 7.611982, 52.4417"/>
      </If>
    </If>
    <If Condition="HasQuest(68419) and not IsQuestCompleted(68419) and GetQuestStep(68419) == 1">
      <GetTo ZoneId="621" XYZ="-156.9747, 2.799993, 196.0645"/>
      <UseItem ItemId="2002315" NpcId="5719" XYZ="-142.7926, -0.3, 136.9581" InCombatOnly="True" UseHealthPercent="25" QuestId="68419" StepId="1"/>
    </If>
    <If Condition="HasQuest(68419) and not IsQuestCompleted(68419) and GetQuestStep(68419) == 255">
      <GetTo ZoneId="621" XYZ="-539.7079, 7.611982, 52.32739"/>
      <TurnIn QuestId="68419" ItemId="2002316" NpcId="1022991" XYZ="-539.7079, 7.611982, 52.32739"/>
    </If>
  </Order>
  <GrindAreas>
    <GrindArea Name="68416">
      <Hotspots>
        <Hotspot XYZ="-473.1273, 87.08347, -722.8254" Radius="90"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="5728"/>
      </TargetMobs>
      <MinLevel/>
      <MaxLevel/>
    </GrindArea>
  </GrindAreas>
  <CodeChunks>
    <CodeChunk Name="68417">
      <![CDATA[ 
        MovementManager.StartDescending();
        while (CommonBehaviors.IsLoading)  {  await Coroutine.Yield();  }
        while (!MovementManager.IsDiving)  {  await Coroutine.Yield();  }	
        MovementManager.StopDescending();

        if (MovementManager.IsDiving)
        {
          var p1 = new Vector3(-108.7301f, -263.9186f, -157.6365f);
          var p2 = new Vector3(-54.30657f, -339.5192f, -102.2504f);
  
          if (!Core.Player.IsMounted)  {  await CommonTasks.SummonFlyingMount();  }
  
          while (Core.Player.Location.Distance(p1) > 1f)
          {
            Navigator.PlayerMover.MoveTowards(p1);
            await Coroutine.Yield();
          }
  
          while (Core.Player.Location.Distance(p2) > 3f)
          {
            Navigator.PlayerMover.MoveTowards(p2);
            await Coroutine.Yield();
          }
		  
		  MovementManager.MoveStop();
		  
          var obj = GameObjectManager.GetObjectByNPCId(2008779);  
		  
		  obj.Interact();

          while (ConditionParser.GetQuestStep(68417) == 2)
          {
            if (Talk.DialogOpen)  {  Talk.Next();  }
            await Coroutine.Yield();
          }
		  
		  await Coroutine.Sleep(2000);
		  
          if (!Core.Player.IsMounted)  {  await CommonTasks.SummonFlyingMount();  }

          while (Core.Player.Location.Distance(p1) > 1f)
          {
            Navigator.PlayerMover.MoveTowards(p1);
            await Coroutine.Yield();
          }
		  
          MovementManager.MoveStop();
          MovementManager.StartAscending();
          while (CommonBehaviors.IsLoading)  {  await Coroutine.Yield();  }
          while (MovementManager.IsDiving)  {  await Coroutine.Yield();  }	
          MovementManager.StopAscending();
        }
      ]]>
    </CodeChunk>
  </CodeChunks>
</Profile>

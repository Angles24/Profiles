<?xml version="1.0" encoding="UTF-8"?>
<!--
Profile:  [Orderbot] The Ruby Sea Aether Current Quests
Authors:  Sodimm, TuckMeIntoBread
-->
<Profile>
  <Name>[Orderbot] The Ruby Sea Aether Current Quests</Name>
  <BehaviorDirectory>..\Quest Behaviors</BehaviorDirectory>
  <Order>
    <!-- The Price of Betrayal (3) -->
    <If Condition="IsQuestCompleted(68014) and not HasQuest(68209) and not IsQuestCompleted(68209)">
      <GetTo ZoneId="613" XYZ="500.3604, 34.0062, 783.7982"/>
      <If Condition="IsQuestAcceptQualified(68209)">
        <PickupQuest QuestId="68209" NpcId="1019168" XYZ="500.3604, 34.0062, 783.7982"/>
      </If>
    </If>
    <If Condition="HasQuest(68209) and not IsQuestCompleted(68209) and GetQuestStep(68209) == 1">
      <GetTo ZoneId="613" XYZ="829.1404, 5.923008, 857.9793"/>
      <TalkTo NpcId="1019154" XYZ="829.1404, 5.923008, 857.9793" QuestId="68209" StepId="1"/>
    </If>
    <If Condition="HasQuest(68209) and not IsQuestCompleted(68209) and GetQuestStep(68209) == 2">
      <GetTo ZoneId="613" XYZ="286.7627, -0.4914888, 395.7862"/>
      <TalkTo NpcId="1022745" XYZ="286.7627, -0.4914888, 395.7862" QuestId="68209" StepId="2"/>
      <WaitWhile Condition="HasQuest(68209) and not IsQuestCompleted(68209) and not GetQuestStep(68209) == 255"/>
    </If>
    <If Condition="HasQuest(68209) and not IsQuestCompleted(68209) and GetQuestStep(68209) == 255">
      <GetTo ZoneId="613" XYZ="828.8051, 5.923008, 857.5446"/>
      <TurnIn QuestId="68209" NpcId="1019154" XYZ="828.8051, 5.923008, 857.5446"/>
    </If>
    <!-- Pulling Double Booty (2) -->
    <If Condition="IsQuestCompleted(68017) and not HasQuest(68223) and not IsQuestCompleted(68223)">
      <GetTo ZoneId="613" XYZ="98.68376, 2.082913, -614.7886"/>
      <If Condition="IsQuestAcceptQualified(68223)">
        <PickupQuest QuestId="68223" NpcId="1022102" XYZ="98.68376, 2.082913, -614.7886"/>
      </If>
    </If>
    <If Condition="HasQuest(68223) and not IsQuestCompleted(68223) and GetQuestStep(68223) == 1">
      <GetTo ZoneId="613" XYZ="-47.1007, 2.806094, -634.2139"/>
      <TalkTo NpcId="1022103" XYZ="-47.1007, 2.806094, -634.2139" QuestId="68223" StepId="1"/>
    </If>
    <If Condition="HasQuest(68223) and not IsQuestCompleted(68223) and GetQuestStep(68223) == 2">
      <GetTo ZoneId="628" XYZ="133.2922, 12, 69.90587"/>
      <HandOver ItemIds="2002223,2002224" NpcId="1022122" XYZ="133.2922, 12, 69.90587" QuestId="68223" StepId="2"/>
    </If>
    <If Condition="HasQuest(68223) and not IsQuestCompleted(68223) and GetQuestStep(68223) == 3">
      <GetTo ZoneId="628" XYZ="-129.3015, -4.999999, 141.4579"/>
      <HandOver ItemIds="2002223,2002224" NpcId="1019049" XYZ="-129.3015, -4.999999, 141.4579" QuestId="68223" StepId="3"/>
    </If>
    <If Condition="HasQuest(68223) and not IsQuestCompleted(68223) and GetQuestStep(68223) == 255">
      <GetTo ZoneId="613" XYZ="-47.80473, 2.769715, -634.8738"/>
      <TurnIn QuestId="68223" ItemIds="2002223,2002224" NpcId="1022117" XYZ="-47.80473, 2.769715, -634.8738"/>
    </If>
    <!-- The Sword in the Stone (1) -->
    <If Condition="IsQuestCompleted(68019) and not HasQuest(68229) and not IsQuestCompleted(68229)">
      <GetTo ZoneId="613" XYZ="565.2492, -61.97559, -146.0982"/>
      <If Condition="IsQuestAcceptQualified(68229)">
        <PickupQuest QuestId="68229" NpcId="1023357" XYZ="565.2492, -61.97559, -146.0982"/>
      </If>
    </If>
    <If Condition="HasQuest(68229) and not IsQuestCompleted(68229) and GetQuestStep(68229) == 1">
      <GetTo ZoneId="613" XYZ="608.8949, -2.825304, -91.27941"/>
      <TalkTo NpcId="1023358" XYZ="608.8949, -2.825304, -91.27941" QuestId="68229" StepId="1"/>
    </If>
    <If Condition="HasQuest(68229) and not IsQuestCompleted(68229) and GetQuestStep(68229) == 2">
	  <Dismount/>
	  <WaitTimer WaitTime="3" />
      <NoCombatMoveTo XYZ="611.0259, -1.795426, -90.84206"/>
      <NoCombatMoveTo XYZ="612.9421, -1.754529, -92.88273" Distance="0.5" UseMesh="False"/>
      <NoCombatMoveTo XYZ="617.4945, -19.1348, -116.245" Distance="0.25" UseMesh="False"/>
      <Dismount/>
	  <WaitTimer WaitTime="3" />
      <RunCode Name="68229a"/>
      <WaitWhile Condition="HasQuest(68229) and not IsQuestCompleted(68229) and not GetQuestStep(68229) == 3"/>
    </If>
    <If Condition="HasQuest(68229) and not IsQuestCompleted(68229) and GetQuestStep(68229) == 3">
      <NoCombatMoveTo XYZ="616.2009, -29.56922, -131.3559" Distance="0.25" UseMesh="False"/>
      <RunCode Name="68229b"/>
      <NoCombatMoveTo XYZ="601.701, -37.3288, -145.7284" Distance="0.25" UseMesh="False"/>
      <Dismount/>
      <RunCode Name="68229c"/>
      <NoCombatMoveTo XYZ="596.343, -43.55858, -157.2047" Distance="0.5" UseMesh="False"/>
      <NoCombatMoveTo XYZ="567.4005, -62.05959, -145.2847" Distance="1.0" UseMesh="False"/>
      <WaitWhile Condition="HasQuest(68229) and not IsQuestCompleted(68229) and not GetQuestStep(68229) == 255"/>
    </If>
    <If Condition="HasQuest(68229) and not IsQuestCompleted(68229) and GetQuestStep(68229) == 255">
      <GetTo ZoneId="613" XYZ="608.9202, -2.84076, -91.35365"/>
      <TurnIn QuestId="68229" NpcId="1023358" XYZ="608.9202, -2.84076, -91.35365"/>
    </If>
    <!-- The Palace of Lost Souls (0) -->
    <If Condition="IsQuestCompleted(68021) and not HasQuest(68168) and not IsQuestCompleted(68168)">
      <If Condition="not IsOnSubMap(2772)">
        <GetTo ZoneId="613" XYZ="325.959, -120.3188, -308.8289"/>
        <RunCode Name="SuiNoSato"/>
      </If>
      <If Condition="IsQuestAcceptQualified(68168)">
        <MoveTo XYZ="-63.24492, -198.9927, -65.75132"/>
        <SoPickupQuest QuestId="68168" NpcId="1023280" XYZ="-63.24492, -198.9927, -65.75132"/>
      </If>
    </If>
    <If Condition="HasQuest(68168) and not IsQuestCompleted(68168) and GetQuestStep(68168) == 1">
      <If Condition="not IsOnSubMap(2772)">
        <GetTo ZoneId="613" XYZ="325.959, -120.3188, -308.8289"/>
        <RunCode Name="SuiNoSato"/>
      </If>
      <TalkTo NpcId="1019197" XYZ="-10.84258, -187.0837, -94.69545" QuestId="68168" StepId="1"/>
    </If>
    <If Condition="HasQuest(68168) and not IsQuestCompleted(68168) and GetQuestStep(68168) == 2">
      <If Condition="not IsOnSubMap(2772)">
        <GetTo ZoneId="613" XYZ="325.959, -120.3188, -308.8289"/>
        <RunCode Name="SuiNoSato"/>
      </If>
      <MoveTo XYZ="15.6932, -197.987, -151.7496"/>
      <RunCode Name="ShisuiOfTheVioletTides"/>
      <TalkTo NpcId="1023293" XYZ="-955.9929, -899.5684, 757.0262" QuestId="68168" StepId="2"/>
    </If>
    <If Condition="HasQuest(68168) and not IsQuestCompleted(68168) and GetQuestStep(68168) == 3">
      <RunCode Name="ManualCompletion"/>
    </If>
    <If Condition="HasQuest(68168) and not IsQuestCompleted(68168) and GetQuestStep(68168) == 4">
      <If Condition="not IsOnSubMap(2778)">
        <GetTo ZoneId="613" XYZ="325.959, -120.3188, -308.8289"/>
        <RunCode Name="SuiNoSato"/>
        <MoveTo XYZ="15.6932, -197.987, -151.7496"/>
        <RunCode Name="ShisuiOfTheVioletTides"/>
      </If>
      <TalkTo NpcId="1023293" XYZ="-955.6203, -899.6981, 757.6763" QuestId="68168" StepId="4"/>
    </If>
    <If Condition="HasQuest(68168) and not IsQuestCompleted(68168) and GetQuestStep(68168) == 255">
      <GetTo ZoneId="613" XYZ="325.959, -120.3188, -308.8289"/>
      <RunCode Name="SuiNoSato"/>
      <TurnIn QuestId="68168" NpcId="1023280" XYZ="-63.31102, -198.991, -65.69412"/>
    </If>
  </Order>
  <GrindAreas/>
  <CodeChunks>
    <CodeChunk Name="ManualCompletion">
      <![CDATA[
        Core.OverlayManager.AddToast(() => "Please complete the next Quest Objective manually.", TimeSpan.FromMilliseconds(25000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
        await Coroutine.Sleep(26000);
      ]]>
    </CodeChunk>
    <CodeChunk Name="68229a">
      <![CDATA[
        MovementManager.SetFacing(2.91f);
        MovementManager.MoveForwardStart();
        await Coroutine.Sleep(250);
        MovementManager.Jump();
        await Coroutine.Sleep(650);
        MovementManager.MoveForwardStop();
        await Coroutine.Sleep(500);
      ]]>
    </CodeChunk>
    <CodeChunk Name="68229b">
      <![CDATA[
        MovementManager.SetFacing(4.28f);
        MovementManager.MoveForwardStart();
        await Coroutine.Sleep(250);
        MovementManager.Jump();
        await Coroutine.Sleep(650);
        MovementManager.MoveForwardStop();
        await Coroutine.Sleep(500);
      ]]>
    </CodeChunk>
    <CodeChunk Name="68229c">
      <![CDATA[
        MovementManager.SetFacing(3.5f);
        MovementManager.MoveForwardStart();
        await Coroutine.Sleep(180);
        MovementManager.Jump();
        await Coroutine.Sleep(650);
        MovementManager.MoveForwardStop();
        await Coroutine.Sleep(500);
      ]]>
    </CodeChunk>
    <CodeChunk Name="SuiNoSato">
      <![CDATA[
        var p1 = new Vector3(189.2789f, -97.34477f, -251.9925f);
        var p2 = new Vector3(33.75797f, -196.0178f, -162.433f);
    
        MovementManager.MoveForwardStart();
        await Coroutine.Sleep(4000);

        while (!MovementManager.IsDiving)   {  await Coroutine.Yield();  }
        while (CommonBehaviors.IsLoading)   {  await Coroutine.Yield();  }
    
        MovementManager.MoveForwardStart();
        await Coroutine.Sleep(4000);
        MovementManager.MoveStop();		

        while (Core.Player.Location.Distance(p1) > 2f)
        {
           Navigator.PlayerMover.MoveTowards(p1);
           await Coroutine.Yield();
        }
    
        while (Core.Player.Location.Distance(p2) > 2f)
        {
           Navigator.PlayerMover.MoveTowards(p2);
           await Coroutine.Yield();
        }
    
        MovementManager.SetFacing(5.25f);
        MovementManager.MoveForwardStart();
        await Coroutine.Sleep(6000);

        while (MovementManager.IsDiving)  {  await Coroutine.Yield();  }
        while (CommonBehaviors.IsLoading)  {  await Coroutine.Yield();  }
      ]]>
    </CodeChunk>
    <CodeChunk Name="ShisuiOfTheVioletTides">
      <![CDATA[
        var p1 = new Vector3(63.88613f, -121.9711f, 78.7258f);
        var p2 = new Vector3(-192.6853f, -69.92602f, 331.4522f);
        var p3 = new Vector3(-471.7803f, -40.43297f, 747.8416f);
        var p4 = new Vector3(-955.9929f, -899.5684f, 757.0262f);
    
        MovementManager.SetFacing(2.25f);
        MovementManager.MoveForwardStart();
        await Coroutine.Sleep(6000);

        while (!MovementManager.IsDiving)  {  await Coroutine.Yield();  }
        while (CommonBehaviors.IsLoading)  {  await Coroutine.Yield();  }
    
        if (!Core.Player.IsMounted)  {  await CommonTasks.SummonFlyingMount();  }
    
        while (Core.Player.Location.Distance(p1) > 2f)
        {
           Navigator.PlayerMover.MoveTowards(p1);
           await Coroutine.Yield();
        }
    
        while (Core.Player.Location.Distance(p2) > 2f)
        {
           Navigator.PlayerMover.MoveTowards(p2);
           await Coroutine.Yield();
        }
    
        while (Core.Player.Location.Distance(p3) > 2f)
        {
           Navigator.PlayerMover.MoveTowards(p3);
           await Coroutine.Yield();
        }
    
        while (Core.Player.Location.Distance(p4) > 3f)
        {
           Navigator.PlayerMover.MoveTowards(p4);
           await Coroutine.Yield();
        }
      ]]>
    </CodeChunk>
  </CodeChunks>
</Profile>
